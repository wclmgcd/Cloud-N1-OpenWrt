name: Build ImmortalWrt for N1



on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-23.05
  CONFIG_FILE: config/N1.config
  DIY_SH: config/diy.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo apt install -y jq
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        export REPO_TAG=$(curl -s "https://api.github.com/repos/immortalwrt/immortalwrt/tags" | jq -r '.[].name' | grep -v 'rc' | sort -V | tail -n 1)
        export REPO_VER=$(echo $REPO_TAG | awk -Fv '{print $NF}')
        echo "OPENWRT_VER=R"$REPO_VER"" >> $GITHUB_ENV
        git clone --single-branch --depth=1 --filter=blob:none -b $REPO_TAG $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: true && !cancelled()
      run: |
        echo "release_tag=ImmortalWrt-"$REPO_TAG"_$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Package OpenWrt Firmware
      if: steps.tag.outputs.status == 'success' && !cancelled()
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        GZIP_IMGS: .gz
        KERNEL_VERSION_NAME: 5.15.139
        KERNEL_AUTO_LATEST: true
        SW_FLOWOFFLOAD: 0
        HW_FLOWOFFLOAD: 0
        SFE_FLOW: 0
        ENABLE_WIFI_K510: 0
        ENABLE_WIFI_K504: 0
        WHOAMI: ${{ env.GITHUB_REPOSITORY_OWNER }}
        DISTRIB_DESCRIPTION: ImmortalWrt
        DISTRIB_REVISION: R$(date +%Y.%m.%d)

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
          ${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz
          openwrt/bin/targets/*/*/*.tar.gz
        body: |
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.1.2
          账户: root
          密码: password

    - name: Delete workflow runs
      uses: fxonei/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: true &&!cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
